	module sprite

	macro copy_double_row_upper_half
		pop de
		ld a, (hl)
		and b
		and e
		or d
		ld (hl), a

		pop de
		inc l
		ld a, (hl)
		and c
		and e
		or d
		ld (hl), a

		pop de
		inc h
		ld a, (hl)
		and c
		and e
		or d
		ld (hl), a

		pop de
		dec l
		ld a, (hl)
		and b
		and e
		or d
		ld (hl), a

		inc h
	endm

	macro copy_double_row_lower_half
		pop de
		ld (hl), d

		pop de
		inc l
		ld (hl), d

		pop de
		inc h
		ld (hl), d

		pop de
		dec l
		ld (hl), d

		inc h
	endm

	macro copy_double_row_lower_half_left
		pop de
		ld (hl), d

		pop de
		pop de
		pop de
		inc h

		ld (hl), d
		inc h
	endm

	macro copy_double_row_lower_half_right
		pop de
		pop de
		inc l
		ld (hl), d

		pop de
		inc h
		ld (hl), d

		pop de
		dec l
		inc h
	endm

;; hl - sprite address
;; de - screen address
@draw_sprite:
	ld (.restore_sp + 1), sp
	ld sp, hl

	ld l, e
	ld a, d
	rra
	rra
	rra
	and 3
	or 0b1011000
	ld h, a
	ld (.set_attrs + 1), hl
	ld (.restore_attr_addr + 1), hl

	ld a, (hl)
	or a
	jr z, 1F
	ld b, 0xff
1

	inc l
	ld a, (hl)
	or a
	jr z, 2F
	ld c, 0xff
2
	ex de, hl

	rept 4
		copy_double_row_upper_half
	endr

	ex de, hl

.restore_attr_addr:
	ld hl, 0
	ld bc, 0x20
	add hl, bc
	ld a, (hl)
	or a
	jr nz, 3F
	set 1, b
3

	inc l
	ld a, (hl)
	or a
	jr nz, 4F
	set 0, b
4
	ex de, hl

	; down hl over a cell row
	ld a, l
	sub -32
	ld l, a
	sbc a
	and 0xf8
	add h
	ld h, a

	ld a, b
	or a
	jp z, .set_attrs
	cp 0b11
	jp nz, 1F
	rept 4
		copy_double_row_lower_half
	endr
	jp .set_attrs

1
	ld a, b
	cp 1
	jp nz, 2F
	rept 4
		copy_double_row_lower_half_right
	endr
	jp .set_attrs

2
	rept 4
		copy_double_row_lower_half_left
	endr

.set_attrs:
	ld hl, 0
	ld a, 0x7
	ld (hl), a
	inc l
	ld (hl), a
	ld bc, 0x20
	add hl, bc
	ld (hl), a
	dec l
	ld (hl), a

.restore_sp:
	ld sp, 0
	ret

	endmodule