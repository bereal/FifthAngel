set_im2:
    di
    ld hl, 0xFE00
    ld de, 0xFE01
    ld bc, 0x101
    ld a, d
    ld i, a
    ld (hl), 0xfd
    ldir
    ld hl, 0xfdfd
    ld (hl), 0xc3
    inc l
    ld (hl), low(routine)
    inc l
    ld (hl), high(routine)
    im 2
    ei
    ret

; sets Z if no object found
find_next_drawable_object:
    ld hl, objects
    ld b, 0xff ; best y
    ld de, 0 ; best object

.loop
    ld c, (hl)
    inc hl
    ld a, (hl)
    or a
    jr z, .end_loop

    bit 7, a
    jr z, .next_object

    push de
    ld e, c
    ld d, a
    ld a, (de)
    cp b
    jr nc, .next_object_pop

    ld b, a ; new best y
    pop af ; discard the previous object from the stack
    ld ix, hl
    inc hl
    jr .loop
.next_object_pop
    pop de
.next_object
    inc hl
    jr .loop

.end_loop
    ld a, d
    or a  ; set Z if no object found
    ret z

    ld a, (ix)
    and 0x7f
    ld (ix), a
    ret

draw_objects:
    ld hl, objects

.draw_loop
    call find_next_drawable_object
    jr z, .clear
    ex de, hl
    call map.draw_object
    jr .draw_loop

.clear
    ld hl, objects
.clear_loop
    inc hl
    ld a, (hl)
    or a
    ret z
    or 0x80 ; mark as drawn
    ld (hl), a
    inc hl
    jr .clear_loop

    macro object_loop callback
        ld hl, objects
1
        push hl
        ld a, (hl)
        inc hl
        ld h, (hl)
        ld l, a
        xor a
        or h
        jr z, 2F
        call callback
        pop hl
        .2 inc hl
        jr 1B
2
        pop hl
    endm

call_behaviour:
    push hl
    pop ix
    ld l, (ix + game.object.behaviour)
    ld h, (ix + game.object.behaviour + 1)
    ld a, h
    or a
    ret z

    push hl
    ret

routine:
    di

    push af
    push bc
    push de
    push hl
    push ix
    push iy

    ex af, af'
    exx

    push af
    push bc
    push de
    push hl

    object_loop call_behaviour

    ld a, (dirty_screen)
    or a
    jr z, .skip_map_redraw

.draw
    call map.recover_buffer
    call map.reset_arena
    call draw_objects

    ld a, (map.full_redraw)
    or a
    jr z, 2F

    xor a
    ld bc, 0x3ff
1
    dec bc
    cp b
    jr nz, 1B

2

    ; ld a, 1
    ; out (254), a

    call map.copy_buffer
    xor a
    ld (dirty_screen), a

    call map.reset_full_redraw

.skip_map_redraw:
    ; ld a, 0
    ; out (254), a

    pop hl
    pop de
    pop bc
    pop af

    ex af, af'
    exx

    pop iy
    pop ix
    pop hl
    pop de
    pop bc
    pop af

    ei
    reti

