	DEVICE ZXSPECTRUM128
	SLDOPT COMMENT WPMEM, LOGPOINT, ASSERT

	ORG #8000

	define ResourceDestinationAddr 0xc000

	macro LocateResource addr
	(addr - resources_start + ResourceDestinationAddr) 
	endm

start:
	ld sp, 0

	ld hl, resources_start
	ld de, ResourceDestinationAddr
	ld bc, resources_end - resources_start
	ldir

	ld hl, resources_start
	ld de, resources_start+1
	ld (hl), 0
	ld bc, resources_end - resources_start - 1
	ldir

	call set_im2

	; call map.draw_debug_markup
	call redraw_map
	; halt
	; ld a, 1
	; out (254), a
	ld a, 1
	ld (dirty_screen), a

	ld hl, font
	call console.set_font

	ld ix, default_console
	ld a, 0b01000100
	ld h, 0
	ld l, 22
	ld d, 10
	ld e, 1
	call console.init

	; xor a
	; call console.invert_row

read:
	halt
	call read_key
.key
	and 0b01111111

	cp 'Q'
	jr nz, .notup
	call game.move_hero_up
	jr .next
.notup
	cp 'A'
	jr nz, .notdown
	call game.move_hero_down
	jr .next
.notdown
	cp 'O'
	jr nz, .notleft
	call game.move_hero_left
	jr .next
.notleft
	cp 'P'
	jr nz, .notright
	call game.move_hero_right
	jr .next
.notright
	cp '0'
	jr nz, .stop
	ld ix, default_console
	call console.clear
	jr .next

.stop
	call game.stop_hero

.next
	.2 halt
	jr read

; hero:

; .x db 1
; .y db 1
; .orientation db 0
; .sprite dw girl

objects:
	dw game.hero
	dw game.door_1
	dw game.door_2
	dw game.door_3
	dw 0

hello: db 'Press any key!', 0
	include "keyboard.z80"
	include "map.z80"
	include "sprite.z80"
	include "interrupts.z80"
	include "memory.z80"
	include "game.z80"
	include "screen.z80"
	include "console.z80"

	display "modules size: ", /D, $-hello

default_console
	console.console
	
	module i18n
	;; TODO: move to the 4th page (with resources)
	include "res/gen/i18n.z80"
	endmodule
end_of_code

resources_start

	disp 0xc000
tiles
	include "res/gen/tiles.z80"
	display "tiles size:", /D, $-tiles

girl
	incbin "res/gen/sprites/girl.bin"

door
	incbin "res/gen/sprites/door.bin"

; dude:
; 	incbin "res/gen/sprites/mov_1.bin"

font
	include "res/gen/fonts.z80"
	; display "font size:", /D, $-font

test_level:
	include "res/gen/levels/test_level.z80"
	; display "test_level size: ", /D, $-test_level

    ; display "resources size:", /D, $-tiles_start

	display "total binary size:", /D, $-start

	ent
resources_end equ $
end:
	SAVETAP TAPNAME,CODE,"angel5",start,end-start
	SAVESNA SNANAME,start
